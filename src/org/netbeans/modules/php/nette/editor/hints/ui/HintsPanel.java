/*
 *  The MIT License
 *
 *  Copyright (c) 2010 Radek Ježdík <redhead@email.cz>, Ondřej Brejla <ondrej@brejla.cz>
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */
package org.netbeans.modules.php.nette.editor.hints.ui;

import java.util.HashMap;
import java.util.Map;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.swing.JCheckBox;
import org.netbeans.modules.php.nette.editor.hints.AbstractHint;
import org.netbeans.modules.php.nette.editor.hints.HintsSettings;
import org.openide.filesystems.FileObject;
import org.openide.util.NbBundle;

/**
 *
 * @author Radek Ježdík
 */
final class HintsPanel extends javax.swing.JPanel {

	private boolean changed = false;

	private HashMap<String, Boolean> settings;

	HintsPanel() {
		initComponents();

		settings = HintsSettings.getSettings();

		for(Map.Entry<String, Boolean> entry : settings.entrySet()) {
			boolean b = entry.getValue();

			JCheckBox chbox = new JCheckBox(AbstractHint.getDescription(entry.getKey()));
			chbox.setName(entry.getKey());
			chbox.setSelected(b);
			chbox.addActionListener(new java.awt.event.ActionListener() {
				@Override
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					checkboxClicked(evt);
				}
			});

			boxContainer.add(chbox);
		}

		update();
	}

	private void checkboxClicked(java.awt.event.ActionEvent evt) {
		JCheckBox chbox = (JCheckBox) evt.getSource();
		settings.put(chbox.getName(), chbox.isSelected());
		changed = true;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        setLayout(null);

        boxContainer.setLayout(new java.awt.GridLayout(4, 0));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(HintsPanel.class, "HintsPanel.jLabel1.text")); // NOI18N
        boxContainer.add(jLabel1);

        add(boxContainer);
        boxContainer.setBounds(8, 8, 520, 80);

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(HintsPanel.class, "HintsPanel.AccessibleContext.accessibleName")); // NOI18N
        getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(HintsPanel.class, "HintsPanel.AccessibleContext.accessibleDescription")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

	synchronized void update() {

	}

	void cancel() {
	}

	boolean isChanged() {
		return changed;
	}

	void applyChanges() {
		HintsSettings.saveSettings(settings);
	}

	private String getFileObjectLocalizedName(FileObject fo) {
		Object o = fo.getAttribute("SystemFileSystem.localizingBundle"); // NOI18N
		if(o instanceof String) {
			String bundleName = (String) o;
			try {
				ResourceBundle rb = NbBundle.getBundle(bundleName);
				String localizedName = rb.getString(fo.getPath());
				return localizedName;
			} catch(MissingResourceException ex) {
				// Do nothing return file path;
			}
		}
		return fo.getPath();
	}

	// Variables declaration - do not modify
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boxContainer;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
